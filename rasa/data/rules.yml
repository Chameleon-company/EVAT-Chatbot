version: "3.1"

rules:

# Greeting rule
- rule: Greet user
  steps:
  - intent: greet
  - action: action_collect_initial_location

# Initial location collection rule - handle when user provides location after greeting
- rule: Handle initial location collection
  condition:
  - slot_was_set:
    - conversation_context: initial_location_collection
  steps:
  - action: action_collect_initial_location

# Show initial menu only on fallback when no conversation context
- rule: Handle initial fallback to menu
  condition:
  - slot_was_set:
    - conversation_context: null
  steps:
  - intent: nlu_fallback
  - action: action_handle_any_input

# Menu selection rule - handle when user types 1, 2, or 3
- rule: Handle menu selection
  condition:
  - slot_was_set:
    - conversation_context: null
  steps:
  - intent: menu_selection
  - action: action_handle_menu_selection

# Route planning rule
- rule: Handle route planning
  condition:
  - slot_was_set:
    - conversation_context: null
  steps:
  - intent: route_planning
  - action: action_handle_menu_selection

# Route info rule - handle when user provides route details
- rule: Handle route info
  steps:
  - intent: route_info
  - action: action_handle_route_info

# Route input rule - handle when user types route in route planning context
- rule: Handle route input in route planning context
  condition:
  - slot_was_set:
    - conversation_context: route_planning
  steps:
  - action: action_handle_route_input

# Emergency charging rule
- rule: Handle emergency charging
  condition:
  - slot_was_set:
    - conversation_context: null
  steps:
  - intent: emergency_charging
  - action: action_handle_menu_selection

# Emergency location input rule
- rule: Handle emergency location input
  condition:
  - slot_was_set:
    - conversation_context: emergency_charging
  steps:
  - intent: emergency_location_input
  - action: action_handle_emergency_location_input

# Treat it as an emergency location when we're in emergency mode.
- rule: Handle preference-style location as emergency when in emergency flow
  condition:
  - slot_was_set:
    - conversation_context: emergency_charging
  steps:
  - intent: preference_location_input
  - action: action_handle_emergency_location_input

# Preference charging rule
- rule: Handle preference charging
  condition:
  - slot_was_set:
    - conversation_context: null
  steps:
  - intent: preference_charging
  - action: action_handle_menu_selection

# Preference selection rule - user picks cheapest/fastest/premium
- rule: Handle preference selection
  condition:
  - slot_was_set:
    - conversation_context: preference_charging
  steps:
  - intent: preference_selection
  - action: action_handle_preference_charging

# Preference location input rule - user provides location for preference flow
- rule: Handle preference location input
  condition:
  - slot_was_set:
    - conversation_context: preference_charging
  steps:
  - intent: preference_location_input
  - action: action_handle_preference_location_input

# Preference location fallback: if user says "in <location>" which might be
# classified as emergency_location_input, still handle it as preference location
- rule: Handle emergency-style location as preference when in preference flow
  condition:
  - slot_was_set:
    - conversation_context: preference_charging
  steps:
  - intent: emergency_location_input
  - action: action_handle_preference_location_input

# Route station selection rule - only valid in route planning context
- rule: Handle route station selection
  condition:
  - slot_was_set:
    - conversation_context: route_planning_results
  steps:
  - intent: route_station_selection
  - action: action_handle_route_station_selection

# Fallback: treat unclassified input as station selection in route results
- rule: Handle fallback as route station selection
  condition:
  - slot_was_set:
    - conversation_context: route_planning_results
  steps:
  - intent: nlu_fallback
  - action: action_handle_route_station_selection

# Station selection after comparison (still in station details)
- rule: Handle route station selection in station details
  condition:
  - slot_was_set:
    - conversation_context: station_details
  steps:
  - intent: route_station_selection
  - action: action_handle_route_station_selection

# Fallback: treat unclassified input as station selection in station details
- rule: Handle fallback as route station selection in station details
  condition:
  - slot_was_set:
    - conversation_context: station_details
  steps:
  - intent: nlu_fallback
  - action: action_handle_route_station_selection

# Emergency station selection rule - only valid in emergency context
- rule: Handle emergency station selection
  condition:
  - slot_was_set:
    - conversation_context: emergency_results
  steps:
  - intent: emergency_station_selection
  - action: action_handle_emergency_station_selection

# Preference station selection rule - only valid in preference context
- rule: Handle preference station selection
  condition:
  - slot_was_set:
    - conversation_context: preference_results
  steps:
  - intent: preference_station_selection
  - action: action_handle_preference_station_selection

# If user says a station name that gets classified as route station selection while
# viewing preference results, still handle with the preference station selector
- rule: Handle route-style selection in preference results
  condition:
  - slot_was_set:
    - conversation_context: preference_results
  steps:
  - intent: route_station_selection
  - action: action_handle_preference_station_selection

# If the NLU can't classify the station name, fallback to preference selector
- rule: Handle fallback selection in preference results
  condition:
  - slot_was_set:
    - conversation_context: preference_results
  steps:
  - intent: nlu_fallback
  - action: action_handle_preference_station_selection

# Action selection rule
- rule: Handle action choice
  condition:
  - slot_was_set:
    - conversation_context: station_details
  steps:
  - intent: action_selection
  - action: action_handle_action_choice

# Follow-up requests rule
- rule: Handle follow-up requests
  steps:
  - intent: follow_up
  - action: action_handle_follow_up

# Enhanced preference filtering rule
- rule: Handle enhanced preference filtering
  condition:
  - slot_was_set:
    - conversation_context: preference_charging
  steps:
  - intent: filter_by_preferences
  - action: action_enhanced_preference_filtering

# Enhanced charger information rule
- rule: Handle enhanced charger information
  steps:
  - intent: get_charger_info
  - action: action_enhanced_charger_info

# Traffic information rule
- rule: Handle traffic information
  steps:
  - intent: get_traffic_info
  - action: action_traffic_info

# Advanced directions rule
- rule: Handle advanced directions
  steps:
  - intent: get_advanced_directions
  - action: action_advanced_directions

# Ended conversation: ignore further input
- rule: Ignore input when ended
  condition:
  - slot_was_set:
    - conversation_context: ended
  steps:
  - action: utter_goodbye

# Goodbye rule
- rule: Say goodbye
  steps:
  - intent: goodbye
  - action: utter_goodbye

# Emergency connector/model input handling
- rule: Handle emergency connector/model input
  condition:
  - slot_was_set:
    - conversation_context: emergency_charging
  steps:
  - intent: emergency_connector_input
  - action: action_handle_emergency_location_input

# Emergency fallback routed to connector/model step
- rule: Handle emergency fallback as connector/model
  condition:
  - slot_was_set:
    - conversation_context: emergency_charging
  steps:
  - intent: nlu_fallback
  - action: action_handle_emergency_location_input

